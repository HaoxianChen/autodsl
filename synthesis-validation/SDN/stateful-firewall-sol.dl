.decl port1(x0:number,x1:number)
.decl switch1(x0:symbol,x1:number)
.decl packet(x0:symbol,x1:number,x2:symbol,x3:symbol,x4:number)
.decl port2(x0:number,x1:number)
.decl trusted(x0:symbol,x1:symbol,x2:number)
.decl flowMod(x0:symbol,x1:symbol,x2:symbol,x3:number,x4:number)
.decl new_trusted(x0:symbol,x1:symbol,x2:number)
.decl forward(x0:symbol,x1:symbol,x2:symbol,x3:number,x4:number)
.input port2
.input trusted
.input switch1
.input packet
.input port1
flowMod(switch0,host0,host1,port1,instanceid0) :- host1 != host0,packet(switch0,port0,host0,host1,instanceid0),trusted(switch0,host0,instanceid0),port2(port0,instanceid0),port1(port1,instanceid0).
forward(switch0,host0,host1,port1,instanceid0) :- host1 != host0,trusted(switch0,host0,instanceid0),packet(_,port0,host0,host1,instanceid0),port1(port1,instanceid0),switch1(switch0,instanceid0),port2(port0,instanceid0).
flowMod(switch0,host0,host1,port1,instanceid0) :- host1 != host0,packet(switch0,port0,host0,host1,instanceid0),switch1(switch0,instanceid0),port1(port0,instanceid0),port2(port1,instanceid0).
new_trusted(switch0,host1,instanceid0) :- packet(switch0,port0,_,host1,instanceid0),port1(port0,instanceid0),switch1(switch0,instanceid0).
forward(switch0,host1,host0,port1,instanceid0) :- switch1(switch0,instanceid0),port1(port0,instanceid0),host0 != host1,port2(port1,instanceid0),!trusted(switch0,host0,instanceid0),packet(switch0,port0,host1,host0,instanceid0).
.output new_trusted
.output forward
.output flowMod