.decl port2(x0:number,x1:number)
.decl switch1(x0:number,x1:number)
.decl packet_in(x0:number,x1:number,x2:number,x3:symbol,x4:symbol,x5:number,x6:number)
.decl port1(x0:number,x1:number)
.decl packet_in_l3(x0:number,x1:number,x2:number,x3:symbol,x4:symbol,x5:number)
.decl arppacket(x0:number,x1:number)
.decl packet_out(x0:number,x1:number,x2:number,x3:number)
.decl drop_l3(x0:number,x1:symbol,x2:symbol,x3:number)
.decl flow_mod_l3(x0:number,x1:symbol,x2:symbol,x3:number,x4:number)
.input packet_in
.input port2
.input switch1
.input port1
.input packet_in_l3
.input arppacket
flow_mod_l3(switch0,ip1,ip0,port0,instanceid0) :- packet_in_l3(switch0,port0,_,ip0,ip1,instanceid0),switch1(switch0,instanceid0),port1(port0,instanceid0),ip1 != ip0.
packet_out(switch0,buf0,port1,instanceid0) :- arppacket(type0,instanceid0),switch1(switch0,instanceid0),packet_in(switch0,port0,buf0,mac0,mac1,type0,instanceid0),port2(port1,instanceid0),port1(port0,instanceid0),mac0 != mac1.
flow_mod_l3(switch0,ip1,ip0,port1,instanceid0) :- ip0 != ip1,switch1(switch0,instanceid0),port2(port1,instanceid0),port1(port0,instanceid0),packet_in_l3(switch0,port0,_,ip1,ip0,instanceid0).
packet_out(switch0,buf0,port1,instanceid0) :- port1(port1,instanceid0),mac0 != mac1,arppacket(type0,instanceid0),packet_in(switch0,port0,buf0,mac1,mac0,type0,instanceid0),switch1(switch0,instanceid0),port2(port0,instanceid0).
drop_l3(switch0,ip0,ip1,instanceid0) :- packet_in_l3(switch0,port0,_,ip0,ip1,instanceid0),switch1(switch0,instanceid0),!port1(port0,instanceid0).
.output drop_l3
.output flow_mod_l3
.output packet_out